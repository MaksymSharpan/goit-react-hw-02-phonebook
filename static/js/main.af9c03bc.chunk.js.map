{"version":3,"sources":["components/ContactForm/initialState.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.jsx","index.js"],"names":["initialState","name","number","fields","type","pattern","title","ContactForm","state","handleChange","event","currentTarget","value","setState","handleSubmit","e","preventDefault","props","onSubmit","resetForm","this","onChange","required","Component","ContactList","contacts","deleteContact","contactListItem","map","idx","id","onClick","Filter","placeholder","App","filter","addNewContact","newContact","uuidv4","find","toLowerCase","alert","newList","splice","onChangeFilter","filterValue","target","filterContacts","normalizedFilter","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af9c03bc.chunk.js","sourcesContent":["export const initialState = {\n  name: '',\n  number: '',\n};\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { initialState } from './initialState';\n\nconst fields = {\n  name: {\n    type: 'text',\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\n  },\n  number: {\n    type: 'tel',\n    pattern: '/^(+)?((d{2,3}) ?d|d)(([ -]?d)|( ?(d{2,3}) ?)){5,12}d$/',\n    // pattern: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n    title:\n      'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +',\n  },\n};\n\nclass ContactForm extends Component {\n  state = { ...initialState };\n\n  //Отвечает за обновление состояния\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm() {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  }\n\n  render() {\n    const { name, number } = this.state;\n    const { handleSubmit, handleChange } = this;\n    // console.log({ ...initialState });\n    // const form = document.querySelector('form');\n    // console.log(form);\n    return (\n      <>\n        <form onSubmit={handleSubmit}>\n          <label>\n            <p>Name</p>\n            <input\n              value={name}\n              onChange={handleChange}\n              name=\"name\"\n              {...fields.name}\n              required\n            />\n          </label>\n          <label>\n            <p>Number</p>\n            <input\n              value={number}\n              onChange={handleChange}\n              name=\"number\"\n              {...fields.number}\n              required\n            />\n          </label>\n          <br />\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\n\n// import { v4 as uuidv4 } from 'uuid';\n\n// import PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  const contactListItem = contacts.map(({ id, name, number }, idx) => {\n    // console.log(id);\n    return (\n      <li key={id}>\n        {name} : {number}\n        <button onClick={() => deleteContact(idx)}>Del</button>\n      </li>\n    );\n  });\n\n  return <ul>{contactListItem}</ul>;\n};\n\nexport default ContactList;\n","import React from 'react';\n\nfunction Filter({ onChange }) {\n  return (\n    <>\n      <input onChange={onChange} type=\"text\" placeholder=\"search contact\" />\n    </>\n  );\n}\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n  // formSubmitHandler = data => {\n  //   console.log(data);\n  // };\n\n  addNewContact = ({ id, name, number }) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    if (\n      contacts.find(\n        ({ name }) => name.toLowerCase() === newContact.name.toLowerCase(),\n      )\n    ) {\n      return alert(`${newContact.name} - contact already exists`);\n    }\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n\n    // console.log(newContact);\n  };\n  deleteContact = idx => {\n    this.setState(({ contacts }) => {\n      const newList = [...contacts];\n      newList.splice(idx, 1);\n      // const result = newList.filter((_, index)=> index !== idx);\n      return {\n        contacts: newList,\n      };\n    });\n  };\n\n  onChangeFilter = ({ target }) => {\n    const filterValue = target.value;\n    this.setState({ filter: filterValue });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    if (!filter) {\n      return contacts;\n    }\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    // console.log(this.state);\n\n    const {\n      addNewContact,\n      deleteContact,\n      onChangeFilter,\n      filterContacts,\n    } = this;\n    const contacts = filterContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={addNewContact} />\n\n        <h2>Contacts</h2>\n        <Filter onChange={onChangeFilter} />\n        <ContactList contacts={contacts} deleteContact={deleteContact} />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}